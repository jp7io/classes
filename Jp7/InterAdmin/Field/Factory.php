<?php

class Jp7_InterAdmin_Field_Factory {

    protected $namespace = 'Jp7_InterAdmin_Field_';
    /*
    protected $map = [
        'text' => [],
        'varchar' => [],
        'char' => [],
        'file' => [],
        'date' => [],
        'select' => [],
        'select_multi' => [],
        'special' => [],
        'tit' => [],
        'func' => []
    ];
    */
    /**
     * @param array[] $campo As generated by InterAdminTipo->getCampos()
     * @return Jp7_InterAdmin_Field_Base[]
     */
    public function makeFromCampos(array $campos)
    {
        return array_map([$this, 'makeField'], $campos);
    }
    
    /**
     * @param array $campo As generated by InterAdminTipo->getCampos()
     * @return Jp7_InterAdmin_Field_Base
     */
    public function makeField(array $campo)
    {
        $prefix = $this->getPrefix($campo['tipo']);
        $className = $this->namespace.studly_case($prefix);
        return new $className($campo);
    }
    
    /**
     * @param string
     */
    protected function getPrefix($tipoDeCampo)
    {
        assert(is_string($tipoDeCampo));
        $tipoParts = explode('_', $tipoDeCampo);
        array_pop($tipoParts);
        return implode('_', $tipoParts);
    }
}

/*
public static function getSelectTipoXtras()
{
    return ['S', 'ajax_tipos', 'radio_tipos'];
 * 
 * multi => S
 * 
 * 
 * Retorna os xtra dos campos do tipo special_ que armazenam tipos.
 *
 * @return array

public static function getSpecialTipoXtras()
{
    return ['tipos_multi', 'tipos'];
}
/**
 * Retorna os xtra dos campos do tipo special_ que armazenam m√∫ltiplos registros.
 *
 * @return array
public static function getSpecialMultiXtras()
{
    return ['registros_multi', 'tipos_multi'];
}
*/